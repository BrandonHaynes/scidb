#!/usr/bin/env python
#
# BEGIN_COPYRIGHT
#
# This file is part of SciDB.
# Copyright (C) 2008-2014 SciDB, Inc.
#
# SciDB is free software: you can redistribute it and/or modify
# it under the terms of the AFFERO GNU General Public License as published by
# the Free Software Foundation.
#
# SciDB is distributed "AS-IS" AND WITHOUT ANY WARRANTY OF ANY KIND,
# INCLUDING ANY IMPLIED WARRANTY OF MERCHANTABILITY,
# NON-INFRINGEMENT, OR FITNESS FOR A PARTICULAR PURPOSE. See
# the AFFERO GNU General Public License for the complete license terms.
#
# You should have received a copy of the AFFERO GNU General Public License
# along with SciDB.  If not, see <http://www.gnu.org/licenses/agpl-3.0.html>
#
# END_COPYRIGHT
#
#
#  This scripts prints the no. of times each operator is tested in the test harness.
# It takes input a file containing list of operators. This file can be generated by : iquery -aq "project(list('operators'),name)" -ocsv -r filename.txt


import subprocess
import sys
import os


# Initialize variables
OP_LIST=[]


def usage():
  print 'Usage: '
  print '       ',sys.argv[0],'--list=<operator_file> <dir1> [<dir2>] ... [<dirn>]'
  print '       ',sys.argv[0],'--port=<scidb_port> [--host=<scidb_host>] <dir1> [<dir2>] ... [<dirn>]'
  print ''
  exit(1)


# Run the shell command and return the output
def run_cmd(cmd):
#  print cmd
  ret = subprocess.Popen(cmd, shell=True, stdout=subprocess.PIPE, stderr=subprocess.STDOUT, close_fds=True)
  res = ret.stdout.read()
  if res.find('Error id') >= 0:
    print res
    exit(1)
  return res


# Use scidb to generate list of operators
def generate_operator_list(port,host):
  cmd = 'iquery -aq "project(list(\'operators\'),name)" -c'+host+' -ocsv -p '+port+' -r /tmp/op_list.txt'
  run_cmd(cmd)
  get_op_list('/tmp/op_list.txt')
  run_cmd('rm /tmp/op_list.txt')


# Get list of operators from file
def get_op_list(op_list_file):
  global OP_LIST
  if not os.path.exists(op_list_file):
    print 'Operator file does not exist!'
    print ''
    exit(1)
  in_file = open(op_list_file,'r')
  for line in in_file:
    OP_LIST.append(line.replace('"','').replace('\n',''))
  in_file.close()
  OP_LIST.remove('name')
#  print OP_LIST


# Get count of operators
def get_op_count():
  op_count = {}
  dir_list = []
  test_file_list = []
  t_list = ''
  for spath in sys.argv[2:]:
    dir_list.append(spath)
  for cdir in dir_list:
    if not os.path.isdir(cdir):
      print 'Invalid directory:',cdir
      print ''
      exit(1)
    cmd = 'find '+cdir+' -name *.test'
    t_list = t_list + run_cmd(cmd)
  t_list = t_list.replace('\n',' ')
  r = 500                                 # no. of files to grep at a time
  while(t_list.strip() != ''):            # loop to split list of files into chunks with 'r' elements
    i = t_list.replace(' ','!',r).rfind('!')
    test_file_list.append(t_list[:i])
    t_list = t_list[i:]
  i = 0
  for op in OP_LIST:
    tcount = 0
    for spath in test_file_list:
      cmd = 'grep -h -e "[^-_a-zA-Z0-9]'+op+' *(" -e "^'+op+' *(" '+spath+' | grep -v -e "^#" | wc -l'
      tcount = tcount + int(run_cmd(cmd))
    op_count[op]=tcount
    print '%3d) %-25s: %10d' % (i+1,op,tcount)
    i = i + 1
  print ''


if __name__ == "__main__":
  if len(sys.argv) < 3 or sys.argv.count('--help') > 0:
    usage()
  if sys.argv[1].startswith('--list='):
    get_op_list(sys.argv[1][7:])
  elif sys.argv[1].startswith('--port='):
    host='localhost'
    if sys.argv[2].startswith('--host='):
      host=sys.argv[2][7:]
      sys.argv.remove(sys.argv[2])
      if len(sys.argv) < 3:
        usage()
    generate_operator_list(sys.argv[1][7:],host)
  else:
    usage()
  get_op_count()
  print 'done.'


