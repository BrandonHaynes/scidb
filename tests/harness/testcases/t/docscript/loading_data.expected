SCIDB QUERY : <cat $DOC_DATA/olympic_data.csv>
event,year,person,time
dash,1996,Bailey,9.84
dash,2000,Greene,9.87
dash,2004,Gatlin,9.85
dash,2008,Bolt,9.69
steeplechase,1996,Keter,487.12
steeplechase,2000,Kosgei,503.17
steeplechase,2004,Kemboi,485.81
steeplechase,2008,Kipruto,490.34
marathon,1996,Thugwane,7956
marathon,2000,Abera,7811
marathon,2004,Baldini,7855
marathon,2008,Wanjiru,7596

SCIDB QUERY : <csv2scidb -h>
csv2scidb: Convert CSV file to SciDB input text format.
Usage:   csv2scidb [options] [ < input-file ] [ > output-file ]
Default: -f 0 -c 1000000 -q
Options:
  -v        version information
  -i PATH   input file
  -o PATH   output file
  -a PATH   appended output file
  -c INT    length of chunk
  -f INT    starting coordinate
  -n INT    number of instances
  -d CHAR   delimiter: defaults to ,
  -p STR    type pattern: N number, S string, s nullable-string,
            C char, c nullable-char
  -q        quote the input line exactly by wrapping it in ()
  -s N      skip N lines at the beginning of the file
  -h        prints this helpful message

Note: the -q and -p options are mutually exclusive.

SCIDB QUERY : <cat $DOC_DATA/olympic_data.scidb>
{0}[
("dash",1996,"Bailey",9.84),
("dash",2000,"Greene",9.87),
("dash",2004,"Gatlin",9.85),
("dash",2008,"Bolt",9.69),
("steeplechase",1996,"Keter",487.12),
("steeplechase",2000,"Kosgei",503.17),
("steeplechase",2004,"Kemboi",485.81),
("steeplechase",2008,"Kipruto",490.34),
("marathon",1996,"Thugwane",7956),
("marathon",2000,"Abera",7811),
("marathon",2004,"Baldini",7855),
("marathon",2008,"Wanjiru",7596)
]

SCIDB QUERY : <CREATE ARRAY winnersFlat < event:string, year:int64, person:string, time:double > [i=0:*,1000000,0]>
[Query was executed successfully, ignoring data output by this query.]

SCIDB QUERY : <SELECT * FROM analyze(winnersFlat)>
{attribute_number} attribute_name,min,max,distinct_count,non_null_count
{0} 'event','dash','steeplechase',3,12
{1} 'year','1996','2008',4,12
{2} 'person','Abera','Wanjiru',12,12
{3} 'time','9.69','7956',12,12

SCIDB QUERY : <CREATE ARRAY winners <person:string, time:double> [year=1996:2008,1000,0, event_id=0:3,1000,0]>
[Query was executed successfully, ignoring data output by this query.]

SCIDB QUERY : <create array event_index <event:string>[event_id=0:*,10,0]>
[Query was executed successfully, ignoring data output by this query.]

SCIDB QUERY : <store(uniq(sort(project(winnersFlat,event)),'chunk_size=10'),event_index)>
{event_id} event
{0} 'dash'
{1} 'marathon'
{2} 'steeplechase'

SCIDB QUERY : <store(redimension (project (index_lookup(winnersFlat,event_index,winnersFlat.event, event_id), year,person,time,event_id),winners), winners)>
{year,event_id} person,time
{1996,0} 'Bailey',9.84
{1996,1} 'Thugwane',7956
{1996,2} 'Keter',487.12
{2000,0} 'Greene',9.87
{2000,1} 'Abera',7811
{2000,2} 'Kosgei',503.17
{2004,0} 'Gatlin',9.85
{2004,1} 'Baldini',7855
{2004,2} 'Kemboi',485.81
{2008,0} 'Bolt',9.69
{2008,1} 'Wanjiru',7596
{2008,2} 'Kipruto',490.34

SCIDB QUERY : <SELECT * INTO winners FROM winnersFlat>
[Query was executed successfully, ignoring data output by this query.]

SCIDB QUERY : <scan(winners)>
{year,event_id} person,time
{1996,0} 'Bailey',9.84
{1996,1} 'Keter',487.12
{1996,2} 'Thugwane',7956
{2000,0} 'Greene',9.87
{2000,1} 'Kosgei',503.17
{2000,2} 'Abera',7811
{2004,0} 'Gatlin',9.85
{2004,1} 'Kemboi',485.81
{2004,2} 'Baldini',7855
{2008,0} 'Bolt',9.69
{2008,1} 'Kipruto',490.34
{2008,2} 'Wanjiru',7596

SCIDB QUERY : <SELECT * FROM list('types')>
[Query was executed successfully, ignoring data output by this query.]

SCIDB QUERY : <CREATE ARRAY intensityFlat < exposure:string, elapsedTime:int64, measuredIntensity:int64 null > [i=0:*,1000000,0]>
[Query was executed successfully, ignoring data output by this query.]

SCIDB QUERY : <SELECT exposure, strlen(exposure) FROM intensityFlat>
{i} exposure,expr
{0} 'High',4
{1} 'High',4
{2} 'High',4
{3} 'High',4
{4} 'High',4
{5} 'High',4
{6} 'High',4
{7} 'High',4
{8} 'Medium',6
{9} 'Medium',6
{10} 'Medium',6
{11} 'Medium',6
{12} 'Medium',6
{13} 'Medium',6
{14} 'Medium',6
{15} 'Medium',6
{16} 'Low',3
{17} 'Low',3
{18} 'Low',3
{19} 'Low',3
{20} 'Low',3
{21} 'Low',3
{22} 'Low',3
{23} 'Low',3

SCIDB QUERY : <SELECT * FROM analyze(intensityFlat)>
{attribute_number} attribute_name,min,max,distinct_count,non_null_count
{0} 'exposure','High','Medium',3,24
{1} 'elapsedTime','0','7',8,24
{2} 'measuredIntensity','29','100',16,20

SCIDB QUERY : <create array exposure_index <exposure:string>[exposure_id=0:*,10,0]>
[Query was executed successfully, ignoring data output by this query.]

SCIDB QUERY : <store(uniq(sort(project(intensityFlat,exposure)),'chunk_size=10'),exposure_index)>
{exposure_id} exposure
{0} 'High'
{1} 'Low'
{2} 'Medium'

SCIDB QUERY : <CREATE ARRAY intensity <measuredIntensity:int64 null> [elapsedTime=0:40000,10000,0, exposure_id=0:2,3,0]>
[Query was executed successfully, ignoring data output by this query.]

SCIDB QUERY : <store(redimension (project (index_lookup (intensityFlat,exposure_index,intensityFlat.exposure, exposure_id), elapsedTime,measuredIntensity,exposure_id), intensity),intensity)>
[Query was executed successfully, ignoring data output by this query.]

SCIDB QUERY : <SELECT * INTO intensity FROM intensityFlat>
[Query was executed successfully, ignoring data output by this query.]

SCIDB QUERY : <remove(intensityFlat)>
[Query was executed successfully, ignoring data output by this query.]

SCIDB QUERY : <CREATE ARRAY intensityFlat < exposure:string, elapsedTime:int64, measuredIntensity:int64 null > [i=0:*,1000000,0]>
[Query was executed successfully, ignoring data output by this query.]

SCIDB QUERY : <CREATE ARRAY intensityFlat_NoExposure < elapsedTime:int64, measuredIntensity:int64 null > [i=0:*,1000000,0]>
[Query was executed successfully, ignoring data output by this query.]

SCIDB QUERY : <CREATE ARRAY intensityFlat_NoTime_NoMeasurement < exposure:string > [i=0:*,1000000,0]>
[Query was executed successfully, ignoring data output by this query.]

SCIDB QUERY : <show(intensity)>
{i} schema
{0} 'intensity<measuredIntensity:int64 NULL DEFAULT null> [elapsedTime=0:40000,10000,0,exposure_id=0:2,3,0]'

SCIDB QUERY : <CREATE ARRAY intensityCopy < measuredIntensity:int64 NULL > [duration=0:40000,10000,0, exposure_id=0:3,3,0]>
[Query was executed successfully, ignoring data output by this query.]

SCIDB QUERY : <cat $DOC_DATA/v4.scidb>
[
 (0,100),(1,99),(2,),(3,97)
]
SCIDB QUERY : <CREATE ARRAY v4 <val1:int8,val2:int8>[i=0:3,4,0]>
[Query was executed successfully, ignoring data output by this query.]

SCIDB QUERY : <iquery -c $IQUERY_HOST -p $IQUERY_PORT -olcsv -q "LOAD v4 FROM '${TEST_DATA_DIR}/doc/v4.scidb'">
[(0,100),(1,99),(2,0),(3,97)]

SCIDB QUERY : <CREATE ARRAY v4_dflt <val1:int8,val2:int8 default 111>[i=0:3,4,0]>
[Query was executed successfully, ignoring data output by this query.]

SCIDB QUERY : <iquery -c $IQUERY_HOST -p $IQUERY_PORT -olcsv -q "LOAD v4_dflt FROM '${TEST_DATA_DIR}/doc/v4.scidb'">
[(0,100),(1,99),(2,111),(3,97)]

SCIDB QUERY : <cat $DOC_DATA/v4_null.scidb>
[
 (0,100),(1,99),(2,null),(3,97)
]
SCIDB QUERY : <CREATE ARRAY v4_null <val1:int8,val2:int8 NULL> [i=0:3,4,0]>
[Query was executed successfully, ignoring data output by this query.]

SCIDB QUERY : <CREATE ARRAY v6_dflt <val1:int8,val2:int8 default 111> [i=0:5,6,0]>
[Query was executed successfully, ignoring data output by this query.]

SCIDB QUERY : <iquery -c $IQUERY_HOST -p $IQUERY_PORT -olcsv -q "LOAD v6_dflt FROM '${TEST_DATA_DIR}/doc/v4.scidb'">
[(0,100),(1,99),(2,111),(3,97),(),()]

SCIDB QUERY : <remove(intensityFlat)>
[Query was executed successfully, ignoring data output by this query.]

SCIDB QUERY : <CREATE ARRAY intensityFlat < exposure:string, elapsedTime:int64, measuredIntensity:int64 null > [i=0:6,1000000,0]>
[Query was executed successfully, ignoring data output by this query.]

SCIDB QUERY : <cat $DOC_DATA/csv-errors.txt>
exposure,elapsedTime,measuredIntensity
High,777,100
High,Jack,99
Medium,777,100
Medium,888,95
Medium,Jess,Jill
Low,?,Josh
Low,1888,?

SCIDB QUERY : <cat $DOC_DATA/int4error.scidb>
{0}[
("High",777,100),
("High",Jack,99),
("Medium",777,100),
("Medium",888,95),
("Medium",Jess,Jill),
("Low",?,Josh),
("Low",1888,?)
]

SCIDB QUERY : <iquery -c $IQUERY_HOST -p $IQUERY_PORT -q "LOAD intensityFlat FROM '${TEST_DATA_DIR}/doc/int4error.scidb' AS 'text' ERRORS 99 SHADOW ARRAY intensityFlatShadow">
{i} exposure,elapsedTime,measuredIntensity
{0} 'High',777,100
{1} 'High',0,99
{2} 'Medium',777,100
{3} 'Medium',888,95
{4} 'Medium',0,null
{5} 'Low',0,null
{6} 'Low',1888,null

SCIDB QUERY : <show(intensityFlatShadow)>
{i} schema
{0} 'intensityFlatShadow<exposure:string NULL DEFAULT null,elapsedTime:string NULL DEFAULT null,measuredIntensity:string NULL DEFAULT null,row_offset:int64> [i=0:6,1000000,0]'

SCIDB QUERY : <SELECT * FROM intensityFlatShadow>
{i} exposure,elapsedTime,measuredIntensity,row_offset
{1} null,'Failed to parse string \'Jack\' as int64',null,35
{4} null,'Failed to parse string \'Jess\' as int64','Failed to parse string \'Jill\' as int64',94
{5} null,'Assigning NULL to non-nullable attribute','Failed to parse string \'Josh\' as int64',110

SCIDB QUERY : <SELECT * FROM intensityFlat>
{i} exposure,elapsedTime,measuredIntensity
{0} 'High',777,100
{1} 'High',0,99
{2} 'Medium',777,100
{3} 'Medium',888,95
{4} 'Medium',0,null
{5} 'Low',0,null
{6} 'Low',1888,null

SCIDB QUERY : <SELECT intensityFlat.exposure AS exp, intensityFlatShadow.exposure AS expMSG, intensityFlat.elapsedTime AS elTime, intensityFlatShadow.elapsedTime AS elTimeMSG, intensityFlat.measuredIntensity AS Intensity, intensityFlatShadow.measuredIntensity AS IntensityMSG, row_offset INTO intensityFlatBadCells FROM intensityFlat, intensityFlatShadow>
[Query was executed successfully, ignoring data output by this query.]

SCIDB QUERY : <SELECT * FROM intensityFlatBadCells>
{i} exp,expMSG,elTime,elTimeMSG,Intensity,IntensityMSG,row_offset
{1} 'High',null,0,'Failed to parse string \'Jack\' as int64',99,null,35
{4} 'Medium',null,0,'Failed to parse string \'Jess\' as int64',null,'Failed to parse string \'Jill\' as int64',94
{5} 'Low',null,0,'Assigning NULL to non-nullable attribute',null,'Failed to parse string \'Josh\' as int64',110

Query was executed successfully

Query was executed successfully

Query was executed successfully

Query was executed successfully

Query was executed successfully

Query was executed successfully

Query was executed successfully

Query was executed successfully

Query was executed successfully

Query was executed successfully

Query was executed successfully

Query was executed successfully

Query was executed successfully

Query was executed successfully

Query was executed successfully

