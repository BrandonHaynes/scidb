
--setup
--start-query-logging
load_library('misc')
store (build (<v : int32> [I=0:7,1,0], I), NODE_ID)
create array NODE_ID_REDIM < I: int64> [v=0:7,2,0]


--test
# injectError (nodeid, errorid)
# Error_IDs for inject error:
# 1 - a specific error injected into the Storage::writeChunk code path which is triggered at the end of writing the first chunk
# 2 - a specific error injected into the ReplicationManager::sendItem code path which is triggered when the ReplicationManager is trying to send a chunk to a remote node
# 3 - a specific error injected into the ReplicationManager::wait code path which is triggered when the ReplicationManager is trying to wait until more buffer/queue space is available in NetworkManager. This path is often taken when replication network flow control is pushing back. 
# 4 - a generic error to be interpreted by a specific operator. store(),redim_store(),sg(),rename() error out after they have done 99% of the work (99% because a coordinator will error out before creating a new version in the catalog). remove() errors out before it does any work.

##
## ERROR4
##
# The order of injection (instance1 then instance0) is important because the rollback is async.
# If a second inejection occurs while a worker instance is rolling back on the error from a previous injection,
# it may trigger the injected error prematurely.


## TODO - add checks to verify that no mapping/version arrays are left orphaned.

store(redimension(NODE_ID, NODE_ID_REDIM), NODE_ID_REDIM)

# node1
subarray(apply (NODE_ID, foo, injectError (1, 4)),0,1)
--error "store(redimension(NODE_ID, NODE_ID_REDIM), NODE_ID_REDIM)"

# coordinator
subarray(apply (NODE_ID, foo, injectError (0, 4)),0,0)
--error "store(redimension(NODE_ID, NODE_ID_REDIM), NODE_ID_REDIM)"

--echo "Check for orphans..."
--shell --command "${TEST_UTILS_DIR}/find_leaked_nids.sh ${DB_HOST:=localhost} ${DB_PORT:=5432} ${DB_NAME:=mydb} ${DB_USER:=mydb} ${DB_PASSWD:=mydb}" --store
scan(NODE_ID)
scan(NODE_ID_REDIM)

--cleanup
remove(NODE_ID)
remove(NODE_ID_REDIM)
--stop-query-logging
