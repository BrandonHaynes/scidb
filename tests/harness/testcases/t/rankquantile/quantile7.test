--setup
--start-query-logging
# Tests on string_N datatypes contained in sparse and dense arrays
# Covers 1D sparse & dense and 2D dense array
# Tests for rank,quantile and sort

create array A <a:string> [x=-1:3,2,0]
store(apply( build(<a:string> [x=0:1,2,0 ,y=0:1,2,0],string(40/2.5 *x+1)),b,x/1.1),P)
create array ABC <a: int32, b: string, c: double, d: int64, e: bool, f: float, g: string>[i=1:1000,100,0]
show(P)

--test

store(build(A,string(100000000*(x+2))),A)
--shell --store-all --command "iquery -c $IQUERY_HOST -p $IQUERY_PORT -naq "load(ABC, '${TEST_DATA_DIR}/spsp.txt')""

sort(A)
sort(A,20)
sort(A,a desc)
sort(reverse(A))
sort(filter(A, a>'100000000' and a<'4000000'))
sort(filter(A, a>'100000000' and a<'4000000'), a desc)
sort(filter(A, a<>'300000000'))
sort(filter(A, a<>'300000000'),10)

rank(A)
rank(filter(A, a>'100000000' and a<'4000000'))

quantile(A,2)
quantile(A,4)
quantile(A,10)
quantile(A,20)
quantile(filter(A, a>'100000000' and a<'4000000'),2)
quantile(filter(A, a>'100000000' and a<'4000000'),5)
quantile(filter(A, a>'100000000' and a<'4000000'),12)


sort(P)
sort(P,a desc)
sort(filter(P,b>0),a desc)

rank(P,a)
rank(P,b)
rank(filter(P,b>0))
rank(filter(P,b>0),a desc)

quantile(P,2,a)
quantile(P,4,a)
quantile(P,10,a)
quantile(filter(P,b>0),2,a)
quantile(filter(P,b>0),4,a)
quantile(filter(P,b>0),4,b)
quantile(filter(P,b>0),10,b)

sort(ABC)
sort(ABC,g desc)
sort(ABC,g)
sort(ABC,e)

rank(ABC)
rank(ABC,e)
rank(ABC,e desc)

quantile(ABC,2)
quantile(ABC,3,g)
quantile(ABC,4,a)
quantile(ABC,4,e)
--error --code scidb::SCIDB_SE_QPROC::SCIDB_LE_WRONG_OPERATOR_ARGUMENT2 "quantile(ABC,4,a,g)"

--cleanup
remove(A)
remove(P)
remove(ABC)
--stop-query-logging

