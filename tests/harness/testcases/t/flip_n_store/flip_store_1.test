--setup
--start-query-logging
create array A <a:int64> [x=0:2,3,0]
create array B <x:int64> [a=0:14,3,0]
create array C <x:int64> [a=0:14,3,0]
create array D <a:int64> [x=0:2,3,0]
store(build(A,x+10),A)
store(B,E)
store(D,F)
store(filter(build(D,x+5),x<>1),D)

--test
store(redimension(A,B),B)
store(redimension(D,C),C)
store(redimension(D,E),E)
scan(B)
unpack(B,row)
unpack(C,row)
unpack(E,row)
store(redimension(B,F),F)

aggregate(B,max(x))
aggregate(B,min(x))
aggregate(B,avg(x))
rename(B,B1)
rename(B1,B)
subarray(B,10,11)
between(B,11,20)
filter(B,x>1)
project(B,x)
join(B,B)
cross_join(B,B)
apply(B,z,x-a)
aggregate(B,count(*))
aggregate(B,sum(x))
sort(B,x)
sort(B,x desc)

aggregate(C,max(x))
aggregate(C,min(x))
aggregate(C,avg(x))
rename(C,C1)
rename(C1,C)
subarray(C,7,11)
between(C,7,20)
filter(C,x>1)
project(C,x)
join(C,C)
cross_join(C,C)
apply(C,z,x-a)
aggregate(C,count(*))
aggregate(C,sum(x))
sort(C,x)
sort(C,x desc)

aggregate(E,max(x))
aggregate(E,min(x))
aggregate(E,avg(x))
rename(E,E1)
rename(E1,E)
subarray(E,10,11)
between(E,11,20)
filter(E,x>1)
project(E,x)
join(E,E)
cross_join(E,E)
apply(E,z,x-a)
aggregate(E,count(*))
aggregate(E,sum(x))
sort(E,x)
sort(E,x desc)

aggregate(F,max(a))
aggregate(F,min(a))
aggregate(F,avg(a))
rename(F,F1)
rename(F1,F)
subarray(F,0,1)
between(F,0,1)
filter(F,x>1)
project(F,a)
join(F,F)
cross_join(F,F)
apply(F,z,x-a)
aggregate(F,count(*))
aggregate(F,sum(a))
sort(F,a)
sort(F,a desc)

--cleanup
remove(A)
remove(B)
remove(C)
remove(D)
remove(E)
remove(F)
--stop-query-logging
