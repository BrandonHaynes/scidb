SCIDB QUERY : <create array Ti <a:int32> [x=0:10000,1000,0]>
Query was executed successfully

SCIDB QUERY : <create array Ti_z <a:int32 compression 'zlib'> [x=0:10000,1000,0]>
Query was executed successfully

SCIDB QUERY : <create array Ti_bz <a:int32 compression 'bzlib'> [x=0:10000,1000,0]>
Query was executed successfully

SCIDB QUERY : <create array Usage <name:string, file_blocks_512:uint64> [n=0:*,100,0]>
Query was executed successfully

SCIDB QUERY : <select * into Ti from build(Ti,random()%1000)>
[Query was executed successfully, ignoring data output by this query.]

SCIDB QUERY : <select * into Ti_z from Ti>
[Query was executed successfully, ignoring data output by this query.]

SCIDB QUERY : <select * into Ti_bz from Ti_z>
[Query was executed successfully, ignoring data output by this query.]

SCIDB QUERY : <store(redimension(project(filter(cross_join(filter(list('arrays'), regex(name, 'Ti(.*)')) as A, filter(list('datastores'), inst = 0) as B), A.uaid = B.uaid), name, file_blocks_512), Usage), Usage)>
[Query was executed successfully, ignoring data output by this query.]

SCIDB QUERY : <aggregate(project(filter(cross_join(Usage as A, project(filter(Usage, name = 'Ti') as B, file_blocks_512)), A.file_blocks_512 < B.file_blocks_512),name), count(*))>
{i} count
{0} 2

SCIDB QUERY : <filter(project(filter(cross_join(filter(list('chunk descriptors'), inst = 0), list('arrays', true)), name = 'Ti_z@1' AND arrid = aid), nelem), nelem = 0)>
{inst,n,No} nelem

SCIDB QUERY : <filter(join(Ti as A, Ti_z as B), A.a <> B.a)>
{x} a,a

SCIDB QUERY : <filter(join(Ti as A, Ti_bz as B), A.a <> B.a)>
{x} a,a

SCIDB QUERY : <remove(Ti)>
Query was executed successfully

SCIDB QUERY : <remove(Ti_z)>
Query was executed successfully

SCIDB QUERY : <remove(Ti_bz)>
Query was executed successfully

SCIDB QUERY : <remove(Usage)>
Query was executed successfully

