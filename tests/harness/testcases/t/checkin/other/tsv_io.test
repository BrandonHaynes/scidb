--setup

CREATE ARRAY gradebook <LName:string,FName:string,Dept:string null,Course:int32,GPA:double null,Remarks:string null>[i=0:*,8,0]

# Array for testing TSV encoding of data with funky embedded characters.
CREATE ARRAY funky <Last:string,First:string,Middle:string null>[i=0:*,8,0]

--test

--set-format tsv

# No need for csv2scidb any longer.  Strip nameline and load 'er up.
--shell --store --command " sed 1d ${TEST_DATA_DIR}/grades.tsv > /tmp/tsv_io.load "
load(gradebook, '/tmp/tsv_io.load', -2, 'tsv')

# Note to self: when diff(1) is expected to detect a difference, use "... || true"
# to prevent the test from bombing.

# In each test, we save the array to a file using certain options, and
# then check the result by using sed(1) to transform the original
# input in the way that we expect the load/save operations to have
# transformed it.  For example, some sed transformations we use are:
#
# 's/\tnull\t/\t\\N\t/g'
#       Transform SciDB null to LinearTSV \N.
#
# 's/\t\\N\t/\t\?0\t/g'
#       Transform LinearTSV \N to SciDB ?0-style null
#
# You get the idea.  The trickiest one is 's/\(Kif.*101\)\t\t/\1\t0\t/'
# which compensates for the fact that Kif's empty-string GPA gets
# turned into a 0 and *not* a null by the TSV loader.  This contrasts
# with the CSV behavior: with TSV, to load a null you must *explicitly*
# call it null, \N, or ?n (0<=n<127).

--echo Test plain tsv format
--igdata "save(gradebook, '/tmp/tsv_io_plain.out', -2, 'tsv')"
--shell --store --command "sed -e 's/\tnull\t/\t\\N\t/g' -e 's/\(Kif.*101\)\t\t/\1\t0\t/' ${TEST_DATA_DIR}/grades.tsv | diff - /tmp/tsv_io_plain.out"

--echo Test tsv:E format
--igdata "save(gradebook, '/tmp/tsv_io_E.out', -2, 'tsv:E')"
--shell --store --command "sed -e 's/\t\\N\t/\t\t/g' -e 's/\tnull\t/\t\t/g' -e 's/\(Kif.*101\)\t\t/\1\t0\t/' ${TEST_DATA_DIR}/grades.tsv | diff - /tmp/tsv_io_E.out"

# \N is now the default for tsv output nulls
--echo Test tsv:N format
--igdata "save(gradebook, '/tmp/tsv_io_N.out', -2, 'tsv:N')"
--shell --store --command "sed -e 's/\tnull\t/\t\\N\t/g' -e 's/\(Kif.*101\)\t\t/\1\t0\t/' ${TEST_DATA_DIR}/grades.tsv | diff - /tmp/tsv_io_N.out"

--echo Test tsv:? format
--igdata "save(gradebook, '/tmp/tsv_io_qmark.out', -2, 'tsv:?')"
--shell --store --command "sed -e 's/\tnull\t/\t?0\t/g' -e 's/\t\\N\t/\t\?0\t/g' -e 's/\(Kif.*101\)\t\t/\1\t0\t/' ${TEST_DATA_DIR}/grades.tsv | diff - /tmp/tsv_io_qmark.out"

--echo Test tsv+ format
--igdata "save(gradebook, '/tmp/tsv_io_plus.out', -2, 'tsv+')"
--shell --store --command "awk 'NR == 1 {printf "i\t%s\n", $0} NR != 1 {printf "%d\t%s\n", NR - 2, $0}' ${TEST_DATA_DIR}/grades.tsv | sed -e 's/\tnull\t/\t\\N\t/g' -e 's/\(Kif.*101\)\t\t/\1\t0\t/' | diff - /tmp/tsv_io_plus.out"

--echo Test tsv+:E format
--igdata "save(gradebook, '/tmp/tsv_io_plusE.out', -2, 'tsv+:E')"
--shell --store --command "awk 'NR == 1 {printf "i\t%s\n", $0} NR != 1 {printf "%d\t%s\n", NR - 2, $0}' ${TEST_DATA_DIR}/grades.tsv | sed -e 's/\tnull\t/\t\t/g' -e 's/\t\\N\t/\t\t/g' -e 's/\(Kif.*101\)\t\t/\1\t0\t/' | diff - /tmp/tsv_io_plusE.out"

--echo Test tsv+:N format
--igdata "save(gradebook, '/tmp/tsv_io_plusN.out', -2, 'tsv+:N')"
--shell --command "awk 'NR == 1 {printf "i\t%s\n", $0} NR != 1 {printf "%d\t%s\n", NR - 2, $0}' ${TEST_DATA_DIR}/grades.tsv | sed -e 's/\tnull\t/\t\\N\t/g' -e 's/\(Kif.*101\)\t\t/\1\t0\t/' | diff - /tmp/tsv_io_plusN.out"

--echo Test tsv+:? format
--igdata "save(gradebook, '/tmp/tsv_io_plusQ.out', -2, 'tsv+:?')"
--shell --command "awk 'NR == 1 {printf "i\t%s\n", $0} NR != 1 {printf "%d\t%s\n", NR - 2, $0}' ${TEST_DATA_DIR}/grades.tsv | sed -e 's/\t\\N\t/\t\?0\t/g' -e 's/\tnull\t/\t\?0\t/g' -e 's/\(Kif.*101\)\t\t/\1\t0\t/' | diff - /tmp/tsv_io_plusQ.out"

# On this tiny data set, ltsv+ output looks pretty much like tsv+
# output, so use basically the same tests.

--echo Test ltsv+ format-
--igdata "save(gradebook, '/tmp/tsv_io_L.out', -2, 'ltsv+')"
--shell --store --command "awk 'NR == 1 {printf "i\t%s\n", $0} NR != 1 {printf "%d\t%s\n", NR - 2, $0}' ${TEST_DATA_DIR}/grades.tsv | sed -e 's/\tnull\t/\t\\N\t/g' -e 's/\(Kif.*101\)\t\t/\1\t0\t/' | diff - /tmp/tsv_io_L.out"

--echo Test ltsv+:E format
--igdata "save(gradebook, '/tmp/tsv_io_LE.out', -2, 'ltsv+:E')"
--shell --store --command "awk 'NR == 1 {printf "i\t%s\n", $0} NR != 1 {printf "%d\t%s\n", NR - 2, $0}' ${TEST_DATA_DIR}/grades.tsv | sed -e 's/\tnull\t/\t\t/g' -e 's/\t\\N\t/\t\t/g' -e 's/\(Kif.*101\)\t\t/\1\t0\t/' | diff - /tmp/tsv_io_LE.out"

--echo Test ltsv+:N format
--igdata "save(gradebook, '/tmp/tsv_io_LN.out', -2, 'ltsv+:N')"
--shell --command "awk 'NR == 1 {printf "i\t%s\n", $0} NR != 1 {printf "%d\t%s\n", NR - 2, $0}' ${TEST_DATA_DIR}/grades.tsv | sed -e 's/\tnull\t/\t\\N\t/g' -e 's/\(Kif.*101\)\t\t/\1\t0\t/' | diff - /tmp/tsv_io_LN.out"

--echo Test ltsv+:? format
--igdata "save(gradebook, '/tmp/tsv_io_LQ.out', -2, 'ltsv+:?')"
--shell --command "awk 'NR == 1 {printf "i\t%s\n", $0} NR != 1 {printf "%d\t%s\n", NR - 2, $0}' ${TEST_DATA_DIR}/grades.tsv | sed -e 's/\t\\N\t/\t\?0\t/g' -e 's/\tnull\t/\t\?0\t/g' -e 's/\(Kif.*101\)\t\t/\1\t0\t/' | diff - /tmp/tsv_io_LQ.out"

--echo Test TSV string field encoding

# Painfully get a few hard tabs into SciDB.
--shell --command "echo 'Hunter,	,Q' > /tmp/tabby.csv"
--shell --command "echo 'Get it? It is a 	 joke.,Ha,ha' >> /tmp/tabby.csv"
--shell --command "csv2scidb -p sss < /tmp/tabby.csv > /tmp/tabby.scidb"
--igdata "load(funky, '/tmp/tabby.scidb')"
--igdata "save(funky, '/tmp/tabby.tsv', -2, 'tsv')"
--shell --store --command "cat /tmp/tabby.tsv"
--shell --command "rm /tmp/tabby.*"

--cleanup
remove(gradebook)
remove(funky)
--shell --command "rm -f /tmp/tsv_io* /tmp/grades_*.tsv"
