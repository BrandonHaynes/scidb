SCIDB QUERY : <load_library('point')>
Query was executed successfully

SCIDB QUERY : <load_library('more_math')>
Query was executed successfully

SCIDB QUERY : <sort(filter(list('operators'),library='scidb'),name)>
name,library
'aggregate','scidb'
'allversions','scidb'
'analyze','scidb'
'apply','scidb'
'attribute_rename','scidb'
'attributes','scidb'
'avg_rank','scidb'
'bernoulli','scidb'
'between','scidb'
'build','scidb'
'cancel','scidb'
'cast','scidb'
'concat','scidb'
'consume','scidb'
'create_array','scidb'
'create_array_using','scidb'
'cross_between','scidb'
'cross_join','scidb'
'cumulate','scidb'
'dimensions','scidb'
'diskinfo','scidb'
'explain_logical','scidb'
'explain_physical','scidb'
'filter','scidb'
'help','scidb'
'index_lookup','scidb'
'input','scidb'
'insert','scidb'
'join','scidb'
'list','scidb'
'load','scidb'
'load_library','scidb'
'load_module','scidb'
'lookup','scidb'
'materialize','scidb'
'merge','scidb'
'normalize','scidb'
'old_sort','scidb'
'project','scidb'
'quantile','scidb'
'rank','scidb'
'redimension','scidb'
'reduce_distro','scidb'
'regrid','scidb'
'remove','scidb'
'remove_versions','scidb'
'rename','scidb'
'repart','scidb'
'reshape','scidb'
'reverse','scidb'
'save','scidb'
'scan','scidb'
'setopt','scidb'
'sg','scidb'
'show','scidb'
'slice','scidb'
'sort','scidb'
'splitarraytest','scidb'
'store','scidb'
'subarray','scidb'
'substitute','scidb'
'thin','scidb'
'transpose','scidb'
'unfold','scidb'
'uniq','scidb'
'unload_library','scidb'
'unpack','scidb'
'variable_window','scidb'
'versions','scidb'
'window','scidb'
'xgrid','scidb'

SCIDB QUERY : <sort(filter(list('functions'),library='scidb'),name, profile)>
name,profile,deterministic,library
'%','double %(double,double)',true,'scidb'
'%','int16 %(int16,int16)',true,'scidb'
'%','int32 %(int32,int32)',true,'scidb'
'%','int64 %(int64,int64)',true,'scidb'
'%','int8 %(int8,int8)',true,'scidb'
'%','uint16 %(uint16,uint16)',true,'scidb'
'%','uint32 %(uint32,uint32)',true,'scidb'
'%','uint64 %(uint64,uint64)',true,'scidb'
'%','uint8 %(uint8,uint8)',true,'scidb'
'*','double *(double,double)',true,'scidb'
'*','float *(float,float)',true,'scidb'
'*','int16 *(int16,int16)',true,'scidb'
'*','int32 *(int32,int32)',true,'scidb'
'*','int64 *(int64,int64)',true,'scidb'
'*','int8 *(int8,int8)',true,'scidb'
'*','uint16 *(uint16,uint16)',true,'scidb'
'*','uint32 *(uint32,uint32)',true,'scidb'
'*','uint64 *(uint64,uint64)',true,'scidb'
'*','uint8 *(uint8,uint8)',true,'scidb'
'+','datetime +(datetime,int64)',true,'scidb'
'+','double +(double,double)',true,'scidb'
'+','float +(float,float)',true,'scidb'
'+','int16 +(int16,int16)',true,'scidb'
'+','int32 +(int32,int32)',true,'scidb'
'+','int64 +(int64,int64)',true,'scidb'
'+','int8 +(int8,int8)',true,'scidb'
'+','string +(string,string)',true,'scidb'
'+','uint16 +(uint16,uint16)',true,'scidb'
'+','uint32 +(uint32,uint32)',true,'scidb'
'+','uint64 +(uint64,uint64)',true,'scidb'
'+','uint8 +(uint8,uint8)',true,'scidb'
'-','datetime -(datetime)',true,'scidb'
'-','datetime -(datetime,int64)',true,'scidb'
'-','double -(double)',true,'scidb'
'-','double -(double,double)',true,'scidb'
'-','float -(float)',true,'scidb'
'-','float -(float,float)',true,'scidb'
'-','int16 -(int16)',true,'scidb'
'-','int16 -(int16,int16)',true,'scidb'
'-','int16 -(uint16)',true,'scidb'
'-','int16 -(uint16,uint16)',true,'scidb'
'-','int32 -(int32)',true,'scidb'
'-','int32 -(int32,int32)',true,'scidb'
'-','int32 -(uint32)',true,'scidb'
'-','int32 -(uint32,uint32)',true,'scidb'
'-','int64 -(datetime,datetime)',true,'scidb'
'-','int64 -(int64)',true,'scidb'
'-','int64 -(int64,int64)',true,'scidb'
'-','int64 -(uint64)',true,'scidb'
'-','int64 -(uint64,uint64)',true,'scidb'
'-','int8 -(int8)',true,'scidb'
'-','int8 -(int8,int8)',true,'scidb'
'-','int8 -(uint8)',true,'scidb'
'-','int8 -(uint8,uint8)',true,'scidb'
'/','double /(double,double)',true,'scidb'
'/','float /(float,float)',true,'scidb'
'/','int16 /(int16,int16)',true,'scidb'
'/','int32 /(int32,int32)',true,'scidb'
'/','int64 /(int64,int64)',true,'scidb'
'/','int8 /(int8,int8)',true,'scidb'
'/','uint16 /(uint16,uint16)',true,'scidb'
'/','uint32 /(uint32,uint32)',true,'scidb'
'/','uint64 /(uint64,uint64)',true,'scidb'
'/','uint8 /(uint8,uint8)',true,'scidb'
'<','bool <(bool,bool)',true,'scidb'
'<','bool <(char,char)',true,'scidb'
'<','bool <(datetime,datetime)',true,'scidb'
'<','bool <(datetimetz,datetimetz)',true,'scidb'
'<','bool <(double,double)',true,'scidb'
'<','bool <(float,float)',true,'scidb'
'<','bool <(int16,int16)',true,'scidb'
'<','bool <(int32,int32)',true,'scidb'
'<','bool <(int64,int64)',true,'scidb'
'<','bool <(int8,int8)',true,'scidb'
'<','bool <(string,string)',true,'scidb'
'<','bool <(uint16,uint16)',true,'scidb'
'<','bool <(uint32,uint32)',true,'scidb'
'<','bool <(uint64,uint64)',true,'scidb'
'<','bool <(uint8,uint8)',true,'scidb'
'<=','bool <=(bool,bool)',true,'scidb'
'<=','bool <=(char,char)',true,'scidb'
'<=','bool <=(datetime,datetime)',true,'scidb'
'<=','bool <=(datetimetz,datetimetz)',true,'scidb'
'<=','bool <=(double,double)',true,'scidb'
'<=','bool <=(float,float)',true,'scidb'
'<=','bool <=(int16,int16)',true,'scidb'
'<=','bool <=(int32,int32)',true,'scidb'
'<=','bool <=(int64,int64)',true,'scidb'
'<=','bool <=(int8,int8)',true,'scidb'
'<=','bool <=(string,string)',true,'scidb'
'<=','bool <=(uint16,uint16)',true,'scidb'
'<=','bool <=(uint32,uint32)',true,'scidb'
'<=','bool <=(uint64,uint64)',true,'scidb'
'<=','bool <=(uint8,uint8)',true,'scidb'
'<>','bool <>(bool,bool)',true,'scidb'
'<>','bool <>(char,char)',true,'scidb'
'<>','bool <>(datetime,datetime)',true,'scidb'
'<>','bool <>(datetimetz,datetimetz)',true,'scidb'
'<>','bool <>(double,double)',true,'scidb'
'<>','bool <>(float,float)',true,'scidb'
'<>','bool <>(int16,int16)',true,'scidb'
'<>','bool <>(int32,int32)',true,'scidb'
'<>','bool <>(int64,int64)',true,'scidb'
'<>','bool <>(int8,int8)',true,'scidb'
'<>','bool <>(string,string)',true,'scidb'
'<>','bool <>(uint16,uint16)',true,'scidb'
'<>','bool <>(uint32,uint32)',true,'scidb'
'<>','bool <>(uint64,uint64)',true,'scidb'
'<>','bool <>(uint8,uint8)',true,'scidb'
'=','bool =(bool,bool)',true,'scidb'
'=','bool =(char,char)',true,'scidb'
'=','bool =(datetime,datetime)',true,'scidb'
'=','bool =(datetimetz,datetimetz)',true,'scidb'
'=','bool =(double,double)',true,'scidb'
'=','bool =(float,float)',true,'scidb'
'=','bool =(int16,int16)',true,'scidb'
'=','bool =(int32,int32)',true,'scidb'
'=','bool =(int64,int64)',true,'scidb'
'=','bool =(int8,int8)',true,'scidb'
'=','bool =(string,string)',true,'scidb'
'=','bool =(uint16,uint16)',true,'scidb'
'=','bool =(uint32,uint32)',true,'scidb'
'=','bool =(uint64,uint64)',true,'scidb'
'=','bool =(uint8,uint8)',true,'scidb'
'>','bool >(bool,bool)',true,'scidb'
'>','bool >(char,char)',true,'scidb'
'>','bool >(datetime,datetime)',true,'scidb'
'>','bool >(datetimetz,datetimetz)',true,'scidb'
'>','bool >(double,double)',true,'scidb'
'>','bool >(float,float)',true,'scidb'
'>','bool >(int16,int16)',true,'scidb'
'>','bool >(int32,int32)',true,'scidb'
'>','bool >(int64,int64)',true,'scidb'
'>','bool >(int8,int8)',true,'scidb'
'>','bool >(string,string)',true,'scidb'
'>','bool >(uint16,uint16)',true,'scidb'
'>','bool >(uint32,uint32)',true,'scidb'
'>','bool >(uint64,uint64)',true,'scidb'
'>','bool >(uint8,uint8)',true,'scidb'
'>=','bool >=(bool,bool)',true,'scidb'
'>=','bool >=(char,char)',true,'scidb'
'>=','bool >=(datetime,datetime)',true,'scidb'
'>=','bool >=(datetimetz,datetimetz)',true,'scidb'
'>=','bool >=(double,double)',true,'scidb'
'>=','bool >=(float,float)',true,'scidb'
'>=','bool >=(int16,int16)',true,'scidb'
'>=','bool >=(int32,int32)',true,'scidb'
'>=','bool >=(int64,int64)',true,'scidb'
'>=','bool >=(int8,int8)',true,'scidb'
'>=','bool >=(string,string)',true,'scidb'
'>=','bool >=(uint16,uint16)',true,'scidb'
'>=','bool >=(uint32,uint32)',true,'scidb'
'>=','bool >=(uint64,uint64)',true,'scidb'
'>=','bool >=(uint8,uint8)',true,'scidb'
'abs','double abs(double)',true,'scidb'
'abs','int32 abs(int32)',true,'scidb'
'acos','double acos(double)',true,'scidb'
'acos','float acos(float)',true,'scidb'
'and','bool and(bool,bool)',true,'scidb'
'append_offset','datetimetz append_offset(datetime,int64)',true,'scidb'
'apply_offset','datetimetz apply_offset(datetime,int64)',true,'scidb'
'asin','double asin(double)',true,'scidb'
'asin','float asin(float)',true,'scidb'
'atan','double atan(double)',true,'scidb'
'atan','float atan(float)',true,'scidb'
'ceil','int64 ceil(double)',true,'scidb'
'cos','double cos(double)',true,'scidb'
'cos','float cos(float)',true,'scidb'
'day_of_week','uint8 day_of_week(datetime)',true,'scidb'
'day_of_week','uint8 day_of_week(datetimetz)',true,'scidb'
'exp','double exp(double)',true,'scidb'
'exp','float exp(float)',true,'scidb'
'first_index','int64 first_index(string)',true,'scidb'
'first_index','int64 first_index(string,string)',true,'scidb'
'floor','int64 floor(double)',true,'scidb'
'format','string format(double,string)',true,'scidb'
'get_offset','int64 get_offset(datetimetz)',true,'scidb'
'high','int64 high(string)',true,'scidb'
'high','int64 high(string,string)',true,'scidb'
'hour_of_day','uint8 hour_of_day(datetime)',true,'scidb'
'hour_of_day','uint8 hour_of_day(datetimetz)',true,'scidb'
'iif','<any> iif(bool, <any>, <any>)',true,'scidb'
'instanceid','int64 instanceid()',true,'scidb'
'is_nan','bool is_nan(double)',true,'scidb'
'is_null','void is_null(void)',true,'scidb'
'last_index','int64 last_index(string)',true,'scidb'
'last_index','int64 last_index(string,string)',true,'scidb'
'length','int64 length(string)',true,'scidb'
'length','int64 length(string,string)',true,'scidb'
'log','double log(double)',true,'scidb'
'log','float log(float)',true,'scidb'
'log10','double log10(double)',true,'scidb'
'log10','float log10(float)',true,'scidb'
'low','int64 low(string)',true,'scidb'
'low','int64 low(string,string)',true,'scidb'
'max','bool max(bool,bool)',true,'scidb'
'max','string max(string,string)',true,'scidb'
'min','bool min(bool,bool)',true,'scidb'
'min','string min(string,string)',true,'scidb'
'missing','void missing(int32)',true,'scidb'
'missing_reason','int32 missing_reason(<any>)',true,'scidb'
'not','bool not(bool)',true,'scidb'
'now','datetime now()',false,'scidb'
'or','bool or(bool,bool)',true,'scidb'
'pow','double pow(double,double)',true,'scidb'
'random','uint32 random()',false,'scidb'
'regex','bool regex(string,string)',true,'scidb'
'sin','double sin(double)',true,'scidb'
'sin','float sin(float)',true,'scidb'
'sqrt','double sqrt(double)',true,'scidb'
'sqrt','float sqrt(float)',true,'scidb'
'strchar','char strchar(string)',true,'scidb'
'strftime','string strftime(datetime,string)',true,'scidb'
'strip_offset','datetime strip_offset(datetimetz)',true,'scidb'
'strlen','int32 strlen(string)',true,'scidb'
'substr','string substr(string,int32,int32)',true,'scidb'
'tan','double tan(double)',true,'scidb'
'tan','float tan(float)',true,'scidb'
'togmt','datetime togmt(datetimetz)',true,'scidb'
'tznow','datetimetz tznow()',false,'scidb'

SCIDB QUERY : <store(list('queries'),query_array)>
[Query was executed successfully, ignoring data output by this query.]

SCIDB QUERY : <attributes(query_array)>
name,type_id,nullable
'query_id','uint64',false
'coordinator','uint64',false
'query_string','string',false
'creation_time','datetime',false
'error_code','int32',false
'error','string',false
'idle','bool',false

SCIDB QUERY : <list('aggregates')>
name
'ApproxDC'
'avg'
'count'
'max'
'min'
'prod'
'stdev'
'sum'
'var'

SCIDB QUERY : <select name,schema from list()>
[Query was executed successfully, ignoring data output by this query.]

SCIDB QUERY : <select name,schema from list('arrays')>
[Query was executed successfully, ignoring data output by this query.]

SCIDB QUERY : <sort(filter(list('types'),library='scidb'),name)>
[Query was executed successfully, ignoring data output by this query.]

SCIDB QUERY : <sort(filter(list('libraries'),regex(name,'libmore_math.so|libpoint.so')),name)>
[Query was executed successfully, ignoring data output by this query.]

SCIDB QUERY : <select name,schema from list()>
[Query was executed successfully, ignoring data output by this query.]

SCIDB QUERY : <select name,schema from list('arrays')>
[Query was executed successfully, ignoring data output by this query.]

SCIDB QUERY : <list('error_test')>
[An error expected at this place for the query "list('error_test')". And it failed with error code = scidb::SCIDB_SE_INFER_SCHEMA::SCIDB_LE_LIST_ERROR1. Expected error code = scidb::SCIDB_SE_INFER_SCHEMA::SCIDB_LE_LIST_ERROR1.]

SCIDB QUERY : <store(list('chunk map'),chunk_map_array)>
[Query was executed successfully, ignoring data output by this query.]

SCIDB QUERY : <attributes(chunk_map_array)>
name,type_id,nullable
'svrsn','uint32',false
'instn','uint32',false
'dguid','uint64',false
'dhdrp','uint64',false
'doffs','uint64',false
'uaid','uint64',false
'arrid','uint64',false
'attid','uint64',false
'coord','string',false
'comp','int8',false
'flags','uint8',false
'nelem','uint32',false
'csize','uint64',false
'usize','uint64',false
'asize','uint64',false
'addrs','uint64',false
'clnof','uint64',false
'clons','string',false
'next','uint64',false
'prev','uint64',false
'data','uint64',false
'accnt','int32',false
'nwrit','int32',false
'tstmp','uint64',false
'raw','bool',false
'waitn','bool',false
'lpos','string',false
'fposo','string',false
'lposo','string',false
'strge','uint64',false

SCIDB QUERY : <store(list('chunk descriptors'),chunk_desc_array)>
[Query was executed successfully, ignoring data output by this query.]

SCIDB QUERY : <attributes(chunk_desc_array)>
name,type_id,nullable
'svrsn','uint32',false
'insn','uint32',false
'dguid','uint64',false
'dhdrp','uint64',false
'doffs','uint64',false
'arrid','uint64',false
'attid','uint64',false
'coord','string',false
'comp','int8',false
'flags','uint8',false
'nelem','uint32',false
'csize','uint64',false
'usize','uint64',false
'asize','uint64',false
'free','bool',false

SCIDB QUERY : <store(list('datastores'),ds_array)>
[Query was executed successfully, ignoring data output by this query.]

SCIDB QUERY : <attributes(ds_array)>
name,type_id,nullable
'uaid','uint64',false
'file_bytes','uint64',false
'file_blocks_512','uint64',false
'log_resv_bytes','uint64',false
'log_free_bytes','uint64',false

SCIDB QUERY : <store(list('macros'),macro_array)>
[Query was executed successfully, ignoring data output by this query.]

SCIDB QUERY : <attributes(macro_array)>
name,type_id,nullable
'name','string',false
'type','string',false

SCIDB QUERY : <remove(query_array)>
Query was executed successfully

SCIDB QUERY : <remove(chunk_map_array)>
Query was executed successfully

SCIDB QUERY : <remove(chunk_desc_array)>
Query was executed successfully

SCIDB QUERY : <remove(ds_array)>
Query was executed successfully

SCIDB QUERY : <remove(macro_array)>
Query was executed successfully

