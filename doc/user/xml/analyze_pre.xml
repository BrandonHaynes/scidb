<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
"docbookV4.5/docbookx.dtd">
<refentry>
  <refnamediv id="analyze">
    <refname>analyze</refname>

    <refpurpose><indexterm>
        <primary>analyze</primary>
      </indexterm><indexterm>
        <primary>attributes</primary>

        <secondary>analyze</secondary>
      </indexterm>Produces a 1-dimensional result array where each cell
    describes some simple statistics about the values in one attribute of a
    stored array.</refpurpose>
  </refnamediv>

  <refsynopsisdiv>
    <synopsis>analyze(<replaceable>array</replaceable><optional>, <replaceable>attribute1</replaceable>, <replaceable>attribute2</replaceable>, ...</optional>);</synopsis>
  </refsynopsisdiv>

  <refsect1>
    <title>Summary</title>

    <para>The analyze operator helps you characterize the contents of an
    array. Each cell in the result array includes the following
    attributes:</para>

    <itemizedlist>
      <listitem>
        <para>attribute_number: An index for the one-dimensional result
        array.</para>
      </listitem>
    </itemizedlist>

    <itemizedlist>
      <listitem>
        <para>atttribute_name: The name of an attribute from the source
        array.</para>
      </listitem>
    </itemizedlist>

    <itemizedlist>
      <listitem>
        <para>min: The lowest value for the attribute in the source
        array.</para>
      </listitem>
    </itemizedlist>

    <itemizedlist>
      <listitem>
        <para>max: The highest value for the attribute in the source
        array.</para>
      </listitem>
    </itemizedlist>

    <itemizedlist>
      <listitem>
        <para>distinct_count: An estimate of the number of different values
        appearing in the source array.</para>
      </listitem>
    </itemizedlist>

    <itemizedlist>
      <listitem>
        <para>non_null_count: The number of cells in the array with non-null
        values for the attribute.</para>
      </listitem>
    </itemizedlist>

    <para>You can use the analyze operator to characterize some or all of the
    attributes in an array. To characterize some, name them explicitly with
    the attribute parameter. To characterize all attributes, you can name them
    all explicitly, or you can omit the attribute parameter entirely.</para>

    <para>You can use the analyze operator in the FROM clause of an AQL SELECT
    statement, as a stand-alone operator in a AFL statement, or as an operand
    within other SciDB operators.</para>
  </refsect1>

  <refsect1>
    <title>Example</title>

    <informalexample>
      <para>This example first shows a 1-dimensional array, then analyzes its
      attributes, then analyzes only its numeric attributes.</para>

      <procedure>
        <step>
          <para>Show the schema for the 1-dimensional source
          array:<programlisting language="test">--afl create array event &lt;event:string&gt; [i=0:11,12,0]; --show-query=no --show-output=no
--afl create array year &lt;year:int64&gt;[i=0:11,12,0]; --show-query=no --show-output=no
--afl create array person &lt;person:string&gt;[i=0:11,12,0]; --show-query=no --show-output=no
--afl create array country &lt;country:string&gt;[i=0:11,12,0]; --show-query=no --show-output=no
--afl create array time &lt;time:double&gt;[i=0:11,12,0]; --show-query=no --show-output=no
--afl store(build(event,iif(i&lt;4,'dash',iif(i&lt;8,'steeplechase','marathon'))),event);
       --show-query=no --show-output=no 
--afl store(build(year,1996+(i%4 * 4)),year); --show-query=no --show-output=no
--afl store(build(person,'[Bailey,Greene,Gatlin,Bolt,Keter,Kosgei,Kemboi,Kipruto,
      Thugwane,Abera,Baldini,Wanjiru]',true),person); --show-query=no --show-output=no
--afl store(build(country,'[Canada,USA,USA,Jamaica,Kenya,Kenya,Kenya,Kenya,USA,
      Ethiopia,Italy,Kenya]',true),country); --show-query=no --show-output=no
--afl store(build(time,'[(9.84),(9.87),(9.85),(9.69),(487.12),(503.17),(485.81),
      (490.34),(7956),(7811),(7855),(7596)]',true),time); --show-query=no --show-output=no
--afl store(join(event,join(person,join(year,join(country,time)))),winnersFlat);
       --show-query=no --show-output=no
--schema winnersFlat</programlisting></para>
        </step>

        <step>
          <para>Create a result array describing the attributes of the source
          array:<programlisting language="test">--afl attributes(winnersFlat);</programlisting></para>
        </step>

        <step>
          <para>Create a result array characterizing the values of the
          attributes of the source array:<programlisting language="test">--afl analyze(winnersFlat);</programlisting></para>
        </step>

        <step>
          <para>Create a result array characterizing the values of the numeric
          attributes (time and year) of the source array:<programlisting
          language="test">--afl analyze(winnersFlat,year,time);</programlisting></para>
        </step>
      </procedure>
    </informalexample>
  </refsect1>
</refentry>
