<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
"docbookV4.5/docbookx.dtd">
<refentry id="sumAggregate">
  <refnamediv>
    <refname>sum</refname>

    <refpurpose><indexterm>
        <primary>sum</primary>
      </indexterm><indexterm>
        <primary>aggregates</primary>

        <secondary>sum</secondary>
      </indexterm>Sum aggregate</refpurpose>
  </refnamediv>

  <refsynopsisdiv>
    <synopsis>AQL% <command>SELECT</command> sum(<replaceable>attribute</replaceable>) <command>FROM</command> <replaceable>array</replaceable> <optional><command>GROUP BY</command> <replaceable>dimension_1</replaceable>,<replaceable>dimension_2</replaceable>,...</optional></synopsis>

    <synopsis>AFL% aggregate(<replaceable>array</replaceable>,sum(<replaceable>attribute</replaceable>)<optional>,<replaceable>dimension_1</replaceable>,<replaceable>dimension_2</replaceable>,...</optional>)</synopsis>
  </refsynopsisdiv>

  <refsect1>
    <title>Summary</title>

    <para>The sum aggregate calculates the cumulative sum of a group of
    values. You can optionally specify one or more dimensions to group
    by.</para>

    <para>The sum of an empty set is 0. The sum of a set that contains only
    NULL values is also 0. If the set contains NULL and NOT NULL values, the
    result is the sum of all the NOT NULL values.</para>
  </refsect1>

  <refsect1>
    <title>Example</title>

    <informalexample>
      <para>This example sums the columns and rows of a 3<symbol
      role="symbolfont">×</symbol>3 array.</para>

      <procedure>
        <step>
          <para>Create a 1-attribute, 2-dimensional array called m3x3:
          <programlisting language="test">--afl CREATE ARRAY m3x3 &lt;val:double&gt;[i=0:2,3,0,j=0:2,3,0]; --show-query=yes --show-output=no
</programlisting></para>
        </step>

        <step>
          <para>Store values of 0–8 in m3x3: <programlisting language="test">--afl store(build(m3x3,i*3+j),m3x3); --output-format=dense --chunkify=yes</programlisting></para>
        </step>

        <step>
          <para>Sum the values of m3x3 along dimension j. This sums the
          columns of m3x3: <programlisting language="test">--afl aggregate(m3x3,sum(val),j); --output-format=dense</programlisting></para>
        </step>

        <step>
          <para>Sum the values of m3x3 along dimension i. This sums the rows
          of m3x3: <programlisting language="test">--afl aggregate(m3x3,sum(val),i); --output-format=dense</programlisting></para>
        </step>
      </procedure>
    </informalexample>
  </refsect1>
</refentry>
