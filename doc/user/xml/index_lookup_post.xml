<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "docbookV4.5/docbookx.dtd">
<refentry id="index_lookup">
  <refnamediv>
    <refname>index_lookup</refname>

    <refpurpose><indexterm>
        <primary>index_lookup</primary>
      </indexterm>Uses an attribute from input array <emphasis role="bold">A
    </emphasis>to look up the coordinate value from another input array
    <emphasis role="bold">B</emphasis>.</refpurpose>
  </refnamediv>

  <refsynopsisdiv>
    <synopsis>index_lookup (<replaceable>input_array</replaceable>, <replaceable>index_array</replaceable>, <replaceable>input_array</replaceable>.<replaceable>attribute_name</replaceable> 
    [,<replaceable>output_attribute_name</replaceable>] [,'index_sorted=true | false']
    [,'memory_limit=<replaceable>MEMORY_LIMIT</replaceable>']);</synopsis>
  </refsynopsisdiv>

  <refsect1>
    <title>Summary</title>

    <para>The required parameters are as follows:<itemizedlist>
        <listitem>
          <para>The <replaceable>input_array</replaceable> may have any
          attributes or dimensions.</para>
        </listitem>

        <listitem>
          <para>The <replaceable>index_array </replaceable>must have a single
          dimension and a single non-nullable attribute. The index array data
          must contain unique values. Empty cells are permitted, either
          between populated cells, or beyond all populated cells.</para>
        </listitem>

        <listitem>
          <para>The input attribute,
          <replaceable>input_array</replaceable>.<replaceable>attribute_name</replaceable>,
          must correctly refer to one of the attributes of the input arrayâ€”the
          attribute to be looked up. This attribute must have the same data
          type as the sole attribute of the index array. The comparison
          <command>&lt;</command> (less than) function must be registered in
          SciDB for this data type.</para>
        </listitem>
      </itemizedlist></para>

    <para>The optional parameters are as follows:<itemizedlist>
        <listitem>
          <para>Use <replaceable>output_attribute_name</replaceable> if you
          want to provide a name for the output attribute.
          <command>index_lookup</command> returns all of the attributes in the
          <replaceable>input_array</replaceable>, followed by the newly
          created output attribute. The new attribute is named <emphasis role="bold">input_attribute_name_index</emphasis> by default, or
          takes the optional, provided name.</para>
        </listitem>

        <listitem>
          <para><code>index_sorted</code> is <emphasis role="bold">false
          </emphasis>by default. If you set this to <emphasis role="bold">true</emphasis>, the index array must be sorted, and it
          must be "dense," that is, empty cells are not permitted between the
          populated cells.</para>
        </listitem>

        <listitem>
          <para>Set the<code> memory_limit</code> parameter to increase or
          decrease the size of the memory cache.<command>
          index_lookup</command> uses memory to cache a part of the
          <replaceable>index_array </replaceable>for fast lookup of values. By
          default, the size of this cache is limited to <emphasis role="bold">MEM_ARRAY_THRESHOLD</emphasis>. Note that this is in
          addition to the memory already consumed by cached MemArrays as the
          operator is running. Note that the
          <replaceable>MEMORY_LIMIT</replaceable> value represents the number
          of megabytes for the cache, and must be at greater than or equal to
          1, if entered.</para>
        </listitem>
      </itemizedlist></para>

    <para>Note the following characteristics for the output
    attribute:<itemizedlist>
        <listitem>
          <para>It will have data type int64 and be nullable.</para>
        </listitem>

        <listitem>
          <para>It will contain the respective coordinates of the
          corresponding input attribute in the
          <replaceable>index_array</replaceable>.</para>
        </listitem>

        <listitem>
          <para>If the corresponding input attribute is null, or if no value
          for the input attribute exists in the
          <replaceable>index_array</replaceable>, the output attribute at that
          position is set to null.</para>
        </listitem>
      </itemizedlist></para>
  </refsect1>

  <refsect1>
    <title>Example</title>

    <informalexample>
      <para>This example shows how to return the index value for the stock
      symbol attribute of a small array populated with stock trading
      data.</para>

      <procedure>
        <step>
          <para>Assume we have the following small array containing a data for
          a few stock trades.<para><programlisting>AFL% show(trades)</programlisting><screen><command>trades</command>

&lt; symbol:string,
ms:int64,
volume:uint64,
price:double &gt;

[i=0:9,10,0]</screen><screen>{i} symbol,ms,volume,price
{0} 'BAC',34665774,900,12.7
{1} 'BAC',36774769,11300,19.7
{2} 'AAPL',56512800,100,438.7
{3} 'C',55403661,100,46.5
{4} 'BAC',56395968,100,18.6
{5} 'ZNGA',30741156,500,7.1
{6} 'C',56377439,200,44.85
{7} 'MSFT',40979647,100,36.65
{8} 'FB',40515039,100,27.9
{9} 'JPM',39816561,100,55.5
</screen></para></para>
        </step>

        <step>
          <para>Use the <command>uniq() </command>operator to create an index
          of the Stock symbols.<para><programlisting>AFL% store(uniq(sort(project(trades,symbol))),stock_symbols);  </programlisting><screen>{i} symbol
{0} 'AAPL'
{1} 'BAC'
{2} 'C'
{3} 'FB'
{4} 'JPM'
{5} 'MSFT'
{6} 'ZNGA'
</screen></para></para>
        </step>

        <step>
          <para>Use <command>index_lookup()</command> to return the index
          value for each row of the <emphasis role="bold">trades
          </emphasis>array.<para><programlisting>AFL% index_lookup(trades, stock_symbols, trades.symbol, index);  </programlisting><screen>{i} symbol,ms,volume,price,index
{0} 'BAC',34665774,900,12.7,1
{1} 'BAC',36774769,11300,19.7,1
{2} 'AAPL',56512800,100,438.7,0
{3} 'C',55403661,100,46.5,2
{4} 'BAC',56395968,100,18.6,1
{5} 'ZNGA',30741156,500,7.1,6
{6} 'C',56377439,200,44.85,2
{7} 'MSFT',40979647,100,36.65,5
{8} 'FB',40515039,100,27.9,3
{9} 'JPM',39816561,100,55.5,4
</screen></para></para>
        </step>
      </procedure>
    </informalexample>
  </refsect1>
</refentry>
