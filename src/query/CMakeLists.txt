##############################################################################
# BEGIN_COPYRIGHT
#
# This file is part of SciDB.
# Copyright (C) 2008-2014 SciDB, Inc.
#
# SciDB is free software: you can redistribute it and/or modify
# it under the terms of the AFFERO GNU General Public License as published by
# the Free Software Foundation.
#
# SciDB is distributed "AS-IS" AND WITHOUT ANY WARRANTY OF ANY KIND,
# INCLUDING ANY IMPLIED WARRANTY OF MERCHANTABILITY,
# NON-INFRINGEMENT, OR FITNESS FOR A PARTICULAR PURPOSE. See
# the AFFERO GNU General Public License for the complete license terms.
#
# You should have received a copy of the AFFERO GNU General Public License
# along with SciDB.  If not, see <http://www.gnu.org/licenses/agpl-3.0.html>
#
# END_COPYRIGHT
##############################################################################

add_subdirectory("ops")

flex (Lexer  parser/Lexer.ll  ${CMAKE_CURRENT_BINARY_DIR}/parser/Lexer.cpp)
bison(Parser parser/Parser.yy ${CMAKE_CURRENT_BINARY_DIR}/parser/Parser.cpp)
add_flex_bison_dependency(Lexer Parser)

file(MAKE_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/parser)

include_directories(${CMAKE_CURRENT_SOURCE_DIR} ${CMAKE_CURRENT_BINARY_DIR}/parser/)

set(query_parser_src
    ${CMAKE_CURRENT_BINARY_DIR}/parser/Parser.cpp
    parser/Node.cpp
    parser/Table.cpp
    parser/Driver.cpp
    parser/Module.cpp
    parser/Factory.cpp
    parser/Inliner.cpp
    parser/Visitor.cpp
    parser/Keywords.cpp
    parser/Unparser.cpp
    parser/Desugarer.cpp
    parser/Translator.cpp
    parser/ListMacros.cpp
    parser/ParsingContext.cpp
)

file(GLOB qproc_include
    "*.h"
    "*.inc"
    "executor/*.h"
    "optimizer/*.h"
	"parser/*.h"
	"parser/*.yy"
	"parser/*.ll"
    "util/{na,naInternal,require}.h"
	"${CMAKE_CURRENT_BINARY_DIR}/parser/*.hpp"  # To activate bison generated header hack..
)

#
# HACKS BEGINS HERE
#

# Fixing isatty declaration in source file generated by FLEX on linux.
# Related bug: http://sourceforge.net/tracker/index.php?func=detail&aid=1984987&group_id=97492&atid=618177

set(lexer_src ${CMAKE_CURRENT_BINARY_DIR}/parser/Lexer.cpp)

if(${CMAKE_SYSTEM_NAME} MATCHES "Linux")
	set(lexer_fixed_src ${CMAKE_CURRENT_BINARY_DIR}/parser/Lexer.fixed.cpp)
	add_custom_command(
		OUTPUT ${lexer_fixed_src}
		COMMAND ${SED_EXECUTABLE} 's/isatty \(int \)\;/isatty \(int \) __THROW\;/' ${lexer_src} > ${lexer_fixed_src}
		DEPENDS ${lexer_src}
		COMMENT "Fixing generated FLEX source file (${lexer_fixed_src})"
		WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/parser/
	)
else(${CMAKE_SYSTEM_NAME} MATCHES "Linux")
	set(lexer_fixed_src ${lexer_src})
endif(${CMAKE_SYSTEM_NAME} MATCHES "Linux")

#
# HACKS ENDS HERE
#

# One can create a subdirectory here for each component:
set(scalar_proc_src
    LogicalExpression.cpp
    Expression.cpp
    FunctionLibrary.cpp
    FunctionDescription.cpp
    TypeSystem.cpp
    BuiltinAggregates.cpp
    TileFunctions.cpp
    Aggregate.cpp
)

add_library(scalar_proc_lib STATIC ${scalar_proc_src} ${qproc_include})
target_link_libraries(scalar_proc_lib ${Boost_LIBRARIES})
target_link_libraries(scalar_proc_lib network_lib util_lib)

set(qproc_src
    optimizer/Optimizer.cpp
    optimizer/HabilisOptimizer.cpp
    QueryPlanUtilites.cpp
    QueryPlan.cpp
    OperatorLibrary.cpp
    QueryProcessor.cpp
    Query.cpp
    Serialize.cpp
    Statistics.cpp
    executor/SciDBExecutor.cpp
    RemoteArray.cpp
    Operator.cpp
    OperatorProfiling.cpp
    SGChunkReceiver.cpp
    PullSGContext.cpp
    PullSGArray.cpp
)

set_source_files_properties(${query_parser_src} ${lexer_fixed_src} PROPERTIES COMPILE_FLAGS "-Wno-parentheses")
add_library(qproc_lib STATIC ${qproc_src} ${query_parser_src} ${lexer_fixed_src}  ${qproc_include})
target_link_libraries(qproc_lib ${Boost_LIBRARIES})
target_link_libraries(qproc_lib scalar_proc_lib compression_lib array_lib ops_lib system_lib)
